// <auto-generated />
using System;
using FantasyAppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FantasyAppData.Migrations
{
    [DbContext(typeof(FantasyContext))]
    [Migration("20181209222645_added customer table")]
    partial class addedcustomertable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FantasyAppData.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("FantasyAppData.Models.Lineup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<int?>("DefenseId");

                    b.Property<int?>("FlexId");

                    b.Property<int?>("QBId");

                    b.Property<int?>("RB1Id");

                    b.Property<int?>("RB2Id");

                    b.Property<int?>("TEId");

                    b.Property<int?>("WR1Id");

                    b.Property<int?>("WR2Id");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DefenseId");

                    b.HasIndex("FlexId");

                    b.HasIndex("QBId");

                    b.HasIndex("RB1Id");

                    b.HasIndex("RB2Id");

                    b.HasIndex("TEId");

                    b.HasIndex("WR1Id");

                    b.HasIndex("WR2Id");

                    b.ToTable("Lineups");
                });

            modelBuilder.Entity("FantasyAppData.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LastName");

                    b.Property<int>("salaryCost");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("FantasyAppData.Models.Lineup", b =>
                {
                    b.HasOne("FantasyAppData.Models.Customer")
                        .WithMany("Lineups")
                        .HasForeignKey("CustomerId");

                    b.HasOne("FantasyAppData.Models.Player", "Defense")
                        .WithMany()
                        .HasForeignKey("DefenseId");

                    b.HasOne("FantasyAppData.Models.Player", "Flex")
                        .WithMany()
                        .HasForeignKey("FlexId");

                    b.HasOne("FantasyAppData.Models.Player", "QB")
                        .WithMany()
                        .HasForeignKey("QBId");

                    b.HasOne("FantasyAppData.Models.Player", "RB1")
                        .WithMany()
                        .HasForeignKey("RB1Id");

                    b.HasOne("FantasyAppData.Models.Player", "RB2")
                        .WithMany()
                        .HasForeignKey("RB2Id");

                    b.HasOne("FantasyAppData.Models.Player", "TE")
                        .WithMany()
                        .HasForeignKey("TEId");

                    b.HasOne("FantasyAppData.Models.Player", "WR1")
                        .WithMany()
                        .HasForeignKey("WR1Id");

                    b.HasOne("FantasyAppData.Models.Player", "WR2")
                        .WithMany()
                        .HasForeignKey("WR2Id");
                });
#pragma warning restore 612, 618
        }
    }
}
